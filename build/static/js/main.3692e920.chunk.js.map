{"version":3,"sources":["loading.svg","components/Download.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","downloadPage","display","flexDirection","loading","justifyContent","alignItems","Download","setLoading","classes","query","URLSearchParams","useLocation","search","useState","title","setTitle","url","setUrl","thumbnail","setThumbnail","formats","setFormats","audioFormats","setAudioFormats","parsedUrl","URL","window","location","useEffect","searchParams","get","axios","then","res","data","videoDetails","thumbnails","length","downloadFile","itag","type","console","log","open","className","src","loadingSvg","VideoPlayer","style","marginTop","DownloadSection","map","format","index","qualityLabel","hasAudio","Chip","label","onClick","hasVideo","color","cursor","mimeType","split","backgroundColor","app","form","Button","affliate","padding","border","textDecoration","App","history","useHistory","pathname","noValidate","push","fontSize","TextField","id","variant","required","onChange","e","target","value","includes","replace","alert","path","setInputUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3692e920.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.d9b02833.svg\";","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport loadingSvg from '../loading.svg';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  downloadPage: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    margin: '0 auto',\n  },\n  loading: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    width: '100%',\n  },\n}));\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function Download({ loading, setLoading }) {\n  const classes = useStyles();\n  let query = useQuery();\n\n  // states\n  const [title, setTitle] = useState('Loading');\n  const [url, setUrl] = useState('');\n  const [thumbnail, setThumbnail] = useState('');\n  const [formats, setFormats] = useState();\n  const [audioFormats, setAudioFormats] = useState();\n  let rl = 'Rick Astley - Never Gonna Give You Up (Official Music Video)';\n  const parsedUrl = new URL(window.location);\n  // effect\n  useEffect(() => {\n    if (parsedUrl.searchParams.get('text') != null) {\n      setUrl(parsedUrl.searchParams.get('text'));\n    } else {\n      setUrl(query.get('url'));\n    }\n\n    // axios.get(`http://localhost:4000/video?videoId=${parsedUrl.searchParams.get(\"text\") !== null ? parsedUrl.searchParams.get(\"text\") : query.get(\"url\")}`)\n    axios\n      .get(\n        `https://salty-scrubland-03679.herokuapp.com/video?videoId=${\n          parsedUrl.searchParams.get('text') !== null\n            ? parsedUrl.searchParams.get('text')\n            : query.get('url')\n        }`\n      )\n      .then((res) => {\n        setTitle(res.data.videoDetails.title);\n        setThumbnail(\n          res.data.videoDetails.thumbnails[\n            res.data.videoDetails.thumbnails.length - 1\n          ].url\n        );\n        // console.log(res.data.formats)\n        setFormats(res.data.formats);\n        // console.log(res.data.videoDetails.thumbnails[res.data.videoDetails.thumbnails.length-1])\n        setLoading(false);\n      });\n    // axios.get(`http://localhost:4000/audio?videoId=${query.get(\"url\")}`)\n    axios\n      .get(\n        `https://salty-scrubland-03679.herokuapp.com/audio?videoId=${query.get(\n          'url'\n        )}`\n      )\n      .then((res) => {\n        setAudioFormats(res.data);\n      });\n  }, [query.get('url')]);\n\n  // functions\n  const downloadFile = (itag, type) => {\n    console.log(itag, type);\n    window.open(\n      `https://salty-scrubland-03679.herokuapp.com/download?title=${title}&videoId=${url}&type=${\n        type ? 'mp4' : 'mp3'\n      }&itag=${itag}`\n    );\n  };\n  return (\n    <>\n      {!loading ? (\n        <div className={classes.downloadPage}>\n          <div className={classes.VideoPlayer}>\n            <img src={thumbnail} style={{ width: '100%', marginTop: '7px' }} />\n          </div>\n          <h1>\n            {title === rl\n              ? `You got Rick Rolled... Please Enter a valid url`\n              : title}\n          </h1>\n          <p>Video</p>\n          <div className={classes.DownloadSection}>\n            {formats &&\n              formats.map((format, index) =>\n                format.qualityLabel === null ? (\n                  ''\n                ) : format.hasAudio === true ? (\n                  <Chip\n                    label={format.qualityLabel}\n                    onClick={() => {\n                      downloadFile(format.itag, format.hasVideo);\n                    }}\n                    key={index}\n                    color='primary'\n                    style={{ margin: '0px 7px 7px 0px', cursor: 'pointer' }}\n                  />\n                ) : (\n                  ''\n                )\n              )}\n          </div>\n          <p>Audio</p>\n          <div className={classes.DownloadSection}>\n            {audioFormats &&\n              audioFormats.map((format, index) => (\n                <Chip\n                  label={\n                    format.mimeType.split(';')[0] === 'audio/mp4'\n                      ? 'audio/mp3'\n                      : format.mimeType.split(';')[0]\n                  }\n                  onClick={() => {\n                    downloadFile(format.itag, format.hasVideo);\n                  }}\n                  key={index}\n                  style={{\n                    margin: '0px 7px 7px 0px',\n                    cursor: 'pointer',\n                    backgroundColor: 'red',\n                    color: '#fff',\n                  }}\n                />\n              ))}\n          </div>\n        </div>\n      ) : (\n        <div className={classes.loading}>\n          <img src={loadingSvg} />\n          <p>Loading...</p>\n        </div>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory, useLocation, Route, Link, Switch } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Download from './components/Download';\n// import Seo from './components/Seo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  app: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '80%',\n    margin: '0 auto',\n  },\n  title: {\n    color: 'red',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    cursor: 'pointer',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  Button: {\n    marginTop: '8px',\n    backgroundColor: 'red',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      color: 'red',\n    },\n  },\n  affliate: {\n    cursor: 'pointer',\n    padding: '7px',\n    color: 'blue',\n    marginTop: '14px',\n    border: '1px solid #eee',\n    textDecoration: 'none',\n  },\n}));\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nfunction App() {\n  const classes = useStyles();\n  let history = useHistory();\n  const parsedUrl = new URL(window.location);\n  let query = useQuery();\n  // states\n  const [url, setUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  // effect\n  useEffect(() => {\n    if (parsedUrl.searchParams.get('text') != null) {\n      setUrl(parsedUrl.searchParams.get('text'));\n    }\n    if (window.location.pathname === '/') {\n      setUrl('');\n    } else {\n      setUrl(query.get('url'));\n      if (parsedUrl.searchParams.get('text') != null) {\n        setUrl(parsedUrl.searchParams.get('text'));\n      }\n    }\n  }, [window.location.pathname]);\n  // function\n  const handleSubmit = () => {\n    if (url === '' || !url.includes('https') || !url.includes('yout')) {\n      alert('Please enter a Youtube URL...');\n    } else {\n      if (url.includes('www')) {\n        history.push(`/download?url=${url.replace('www.', '')}`);\n      } else {\n        history.push(`/download?url=${url}`);\n      }\n      setLoading(true);\n    }\n  };\n\n  const handleUrlChange = (e) => {\n    setUrl(e.target.value);\n  };\n\n  return (\n    <div className={classes.app} noValidate>\n      <div className={classes.title} onClick={() => history.push('/')}>\n        <YouTubeIcon style={{ fontSize: '128px' }} />\n        <h1 style={{ marginTop: '0px' }}>Youtube Video Downloader</h1>\n      </div>\n      <form className={classes.form}>\n        <TextField\n          id='outlined-basic'\n          variant='outlined'\n          label='Enter YouTube URL...'\n          type='url'\n          required\n          onChange={handleUrlChange}\n          value={url}\n        />\n        <Button\n          onClick={handleSubmit}\n          variant='contained'\n          className={classes.Button}\n        >\n          Download\n        </Button>\n      </form>\n      <Switch>\n        <Route path='/download'>\n          <Download\n            setInputUrl={setUrl}\n            loading={loading}\n            setLoading={setLoading}\n          />\n        </Route>\n      </Switch>\n\n      {/* <Seo /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}